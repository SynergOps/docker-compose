version: "3.3"
networks:
  proxy:
    name: traefik-net # dont forget to create (docker network create traefik-net) it before running the stack
    external: true

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data/traefik.yml:/traefik.yml:ro
      # Store certificates in ./letsencrypt/acme.json  
      - ./traefik-data/letsencrypt:/letsencrypt # This is the way. Else you shall get stupid errors like 
      # "unable to get ACME account: permissions 755 for ./acme.json are too open, please use 600"
      - ./traefik-data/configurations:/configurations
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure" # expose our container using the configured websecure entrypoint.
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.example.com`)"
      - "traefik.http.routers.traefik-secure.middlewares=user-auth@file" # user-auth is configured in dynamic.yml
      - "traefik.http.routers.traefik-secure.service=api@internal"

# If you need Portainer uncomment the following
#  portainer:
#    image: portainer/portainer-ce:latest
#    container_name: portainer
#    restart: unless-stopped
#    security_opt:
#      - no-new-privileges:true
#    networks:
#      - proxy
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - ./portainer-data:/data
#    labels:
#      - "traefik.enable=true"
#      - "traefik.docker.network=proxy"
#      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
#      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.example.com`)"
#      - "traefik.http.routers.portainer-secure.service=portainer"
#      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
